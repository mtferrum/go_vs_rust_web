\ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ Forth
\ –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å Go –∏ Rust

\ –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
require unix/socket.fs

\ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
8082 CONSTANT SERVER-PORT
1024 CONSTANT BUFFER-SIZE
3 CONSTANT MAX-USERS

\ –°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE USER-STRUCT
  CELL , \ id
  CELL , \ name (–∞–¥—Ä–µ—Å —Å—Ç—Ä–æ–∫–∏)
  CELL , \ email (–∞–¥—Ä–µ—Å —Å—Ç—Ä–æ–∫–∏)  
  CELL , \ age
  CELL , \ created_at (–∞–¥—Ä–µ—Å —Å—Ç—Ä–æ–∫–∏)
CONSTANT USER-SIZE

\ –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE USERS MAX-USERS USER-SIZE * ALLOT
VARIABLE USER-COUNT
0 USER-COUNT !

\ –°—Ç—Ä–æ–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE USER1-NAME ," –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
CREATE USER1-EMAIL ," ivan@example.com"
CREATE USER1-DATE ," 2024-01-01T10:00:00Z"

CREATE USER2-NAME ," –ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞"
CREATE USER2-EMAIL ," maria@example.com"
CREATE USER2-DATE ," 2024-01-02T11:00:00Z"

CREATE USER3-NAME ," –ê–ª–µ–∫—Å–µ–π –°–∏–¥–æ—Ä–æ–≤"
CREATE USER3-EMAIL ," alex@example.com"
CREATE USER3-DATE ," 2024-01-03T12:00:00Z"

\ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
: INIT-USERS
  0 USER-COUNT !
  \ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1
  USERS 1 OVER ! CELL+ USER1-NAME OVER ! CELL+ USER1-EMAIL OVER ! CELL+ 25 OVER ! CELL+ USER1-DATE OVER ! DROP
  \ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2  
  USERS USER-SIZE + 2 OVER ! CELL+ USER2-NAME OVER ! CELL+ USER2-EMAIL OVER ! CELL+ 30 OVER ! CELL+ USER3-DATE OVER ! DROP
  \ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 3
  USERS USER-SIZE 2* + 3 OVER ! CELL+ USER3-NAME OVER ! CELL+ USER3-EMAIL OVER ! CELL+ 28 OVER ! CELL+ USER3-DATE OVER ! DROP
  3 USER-COUNT !
;

\ –ë—É—Ñ–µ—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTTP
CREATE HTTP-BUFFER BUFFER-SIZE ALLOT
CREATE RESPONSE-BUFFER 4096 ALLOT

\ –°–æ–∫–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
VARIABLE SERVER-SOCKET

\ –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏
: STR-LEN ( addr -- len )
  DUP BEGIN DUP C@ WHILE 1+ REPEAT SWAP - ;

: STR-EQUAL ( addr1 addr2 -- flag )
  2DUP STR-LEN SWAP STR-LEN <> IF 2DROP FALSE EXIT THEN
  STR-LEN 0 DO
    2DUP I + C@ SWAP I + C@ <> IF 2DROP FALSE UNLOOP EXIT THEN
  LOOP 2DROP TRUE ;

\ –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
: FIND-SUBSTRING ( str sub -- addr flag )
  SWAP DUP STR-LEN ROT DUP STR-LEN ROT
  2DUP < IF 2DROP 2DROP 0 FALSE EXIT THEN
  OVER - 1+ 0 DO
    2DUP I + SWAP OVER STR-LEN STR-EQUAL IF
      DROP I + TRUE UNLOOP EXIT
    THEN
  LOOP 2DROP 0 FALSE ;

\ HTTP –∑–∞–≥–æ–ª–æ–≤–∫–∏
: SEND-HEADERS ( socket -- )
  DUP S" HTTP/1.1 200 OK" ROT WRITE-LINE DROP
  DUP S" Content-Type: application/json" ROT WRITE-LINE DROP
  DUP S" Access-Control-Allow-Origin: *" ROT WRITE-LINE DROP
  DUP S" Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS" ROT WRITE-LINE DROP
  DUP S" Access-Control-Allow-Headers: Content-Type, Authorization" ROT WRITE-LINE DROP
  S" " ROT WRITE-LINE DROP ;

: SEND-ERROR ( socket code -- )
  DUP 404 = IF
    DUP S" HTTP/1.1 404 Not Found" ROT WRITE-LINE DROP
  ELSE
    DUP S" HTTP/1.1 400 Bad Request" ROT WRITE-LINE DROP
  THEN
  DUP S" Content-Type: application/json" ROT WRITE-LINE DROP
  S" " ROT WRITE-LINE DROP ;

\ JSON –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
: JSON-ESCAPE ( addr -- )
  DUP STR-LEN 0 DO
    DUP I + C@
    DUP [CHAR] " = IF DROP S" \"" TYPE ELSE
    DUP [CHAR] \ = IF DROP S" \\" TYPE ELSE
    DUP [CHAR] / = IF DROP S" \/" TYPE ELSE
    DUP [CHAR] \n = IF DROP S" \n" TYPE ELSE
    DUP [CHAR] \r = IF DROP S" \r" TYPE ELSE
    DUP [CHAR] \t = IF DROP S" \t" TYPE ELSE
    EMIT THEN THEN THEN THEN THEN THEN
  LOOP DROP ;

: JSON-STRING ( addr -- )
  [CHAR] " EMIT JSON-ESCAPE [CHAR] " EMIT ;

: JSON-NUMBER ( n -- )
  S>D <# #S #> TYPE ;

\ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JSON –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
: USER-TO-JSON ( user-addr -- )
  DUP @ JSON-NUMBER S" ," TYPE
  CELL+ DUP @ JSON-STRING S" ," TYPE
  CELL+ DUP @ JSON-STRING S" ," TYPE
  CELL+ DUP @ JSON-NUMBER S" ," TYPE
  CELL+ @ JSON-STRING ;

\ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
: GET-USERS-RESPONSE ( -- addr len )
  S" {" RESPONSE-BUFFER SWAP MOVE
  RESPONSE-BUFFER 1+ \ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É
  S" \"success\":true,\"message\":\"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã\",\"data\":[" SWAP MOVE
  RESPONSE-BUFFER 1+ 60 + \ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—É—é —á–∞—Å—Ç—å
  USER-COUNT @ 0 DO
    I 0> IF S" ," SWAP MOVE SWAP 1+ SWAP THEN
    S" {" SWAP MOVE SWAP 1+ SWAP
    S" \"id\":" SWAP MOVE SWAP 4+ SWAP
    USERS I USER-SIZE * + USER-TO-JSON
    S" }" SWAP MOVE SWAP 1+ SWAP
  LOOP
  S" ]}" SWAP MOVE SWAP 2+ SWAP
  RESPONSE-BUFFER SWAP ;

\ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
: GET-USER-RESPONSE ( id -- addr len )
  DUP 0 USER-COUNT @ WITHIN IF
    S" {" RESPONSE-BUFFER SWAP MOVE
    RESPONSE-BUFFER 1+
    S" \"success\":true,\"message\":\"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω\",\"data\":{" SWAP MOVE
    RESPONSE-BUFFER 1+ 50+
    S" \"id\":" SWAP MOVE SWAP 4+ SWAP
    USERS SWAP 1- USER-SIZE * + USER-TO-JSON
    S" }}" SWAP MOVE SWAP 2+ SWAP
    RESPONSE-BUFFER SWAP
  ELSE
    S" {\"success\":false,\"message\":\"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω\"}" RESPONSE-BUFFER SWAP MOVE
    RESPONSE-BUFFER 50
  THEN ;

\ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
: HOME-RESPONSE ( -- addr len )
  S" {\"success\":true,\"message\":\"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ API –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ Forth!\",\"data\":{\"version\":\"1.0.0\",\"endpoints\":[\"GET / - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞\",\"GET /users - –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\",\"GET /users/{id} - –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID\",\"POST /users - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\",\"PUT /users/{id} - –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\",\"DELETE /users/{id} - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\"]}}" 
  RESPONSE-BUFFER SWAP MOVE
  RESPONSE-BUFFER 200 ;

\ –û–±—Ä–∞–±–æ—Ç–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
: PARSE-REQUEST ( -- method path )
  HTTP-BUFFER DUP STR-LEN 0 DO
    DUP I + C@ [CHAR] SPACE = IF
      I 1+ SWAP I - SWAP EXIT
    THEN
  LOOP
  DUP STR-LEN SWAP ;

: PARSE-PATH ( -- path )
  HTTP-BUFFER DUP STR-LEN 0 DO
    DUP I + C@ [CHAR] SPACE = IF
      I 1+ + DUP STR-LEN 0 DO
        DUP I + C@ [CHAR] SPACE = IF
          I SWAP - SWAP EXIT
        THEN
      LOOP
      DUP STR-LEN SWAP EXIT
    THEN
  LOOP
  DUP STR-LEN SWAP ;

: HANDLE-REQUEST ( socket -- )
  DUP HTTP-BUFFER BUFFER-SIZE READ-LINE DROP DROP
  HTTP-BUFFER PARSE-REQUEST 2DROP
  PARSE-PATH
  DUP S" /" STR-EQUAL IF
    DROP SEND-HEADERS HOME-RESPONSE ROT WRITE-LINE DROP
  ELSE
    DUP S" /users" STR-EQUAL IF
      DROP SEND-HEADERS GET-USERS-RESPONSE ROT WRITE-LINE DROP
    ELSE
      DUP S" /users/" FIND-SUBSTRING IF
        DROP 6 + DUP STR-LEN 1- SWAP 1+ SWAP
        S>NUMBER DROP DROP
        SEND-HEADERS GET-USER-RESPONSE ROT WRITE-LINE DROP
      ELSE
        DROP 404 SEND-ERROR
      THEN
    THEN
  THEN ;

\ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å–µ—Ä–≤–µ—Ä–∞
: START-SERVER
  INIT-USERS
  S" üöÄ Forth –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É " TYPE SERVER-PORT . CR
  S" üìñ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:" TYPE SERVER-PORT . CR
  SERVER-PORT CREATE-SOCKET SERVER-SOCKET !
  SERVER-SOCKET @ BIND-SOCKET
  SERVER-SOCKET @ LISTEN-SOCKET
  BEGIN
    SERVER-SOCKET @ ACCEPT-SOCKET
    DUP HANDLE-REQUEST
    CLOSE-SOCKET
  AGAIN ;

\ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
START-SERVER
